<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="DAO.CheaterDAO">
	
	<!-- 진술서 카테고리별 등록된 수 불러오기 -->
	<select id="getCheaterCount" resultType="Integer">
		SELECT count(*) cnt
		FROM cheaterdb
		WHERE ${param1} LIKE '%${param2}%' AND cheatno = #{param3}
	</select>
	
	<!-- 진술서 등록 정보 전체 중 특정하여 불러오기 -->
	<select id="getAllCheater" resultType="DTO.CheaterDTO">
		SELECT *
		FROM cheaterdb
		WHERE ${param2} LIKE '%${param3}%'
		ORDER BY regdate DESC, stateno DESC
		LIMIT ${param1}, ${param4}
	</select>

	<!-- 진술서 등록 정보 카테고리별 특정하여 불러오기 -->
	<select id="getSearchCheater" resultType="DTO.CheaterDTO">
		SELECT *
		FROM cheaterdb
		WHERE ${param2} LIKE '%${param3}%' AND cheatno = ${param4}
		ORDER BY regdate DESC, stateno DESC
		LIMIT ${param1}, ${param5}
	</select>

	<!-- 진술서 등록 정보 특정 한개만 불러오기 -->
	<select id="getCheater" parameterType="Integer" resultType="DTO.CheaterDTO">
		SELECT * FROM cheaterdb WHERE stateno = #{stateno}
	</select>

	<!-- 진술서 등록하기 -->
	<insert id="insert" parameterType="DTO.CheaterDTO">
		INSERT INTO cheaterdb(
								bankname,
								cheatername,
								account,
								deposit,
								depositdate,
								phone,
								sex,
								feature,
								domain,
								goodskind,
								goodsname,
								cheaterid,
								link,
								regdate,
								content,
								cheatno,
								memberno
								) 
		VALUES(
				#{bankname},
				#{cheatername},
				#{account},
				#{deposit},
				#{depositdate},
				#{phone},
				#{sex},
				#{feature},
				#{domain},
				#{goodskind},
				#{goodsname},
				#{cheaterid},
				#{link},
				SYSDATE(),
				#{content},
				#{cheatno},
				#{memberno}
				)
	</insert>
	
	<!-- 진술서 수정하기 -->
	<update id="update" parameterType="DTO.CheaterDTO">
		UPDATE cheaterdb
		SET bankname = #{bankname},
			cheatername = #{cheatername},
			account = #{account},
			deposit = #{deposit},
			depositdate = #{depositdate},
			phone = #{phone},
			sex = #{sex},
			feature = #{feature},
			domain = #{domain},
			goodskind = #{goodskind},
			goodsname = #{goodsname},
			cheaterid = #{cheaterid},
			link = #{link},
			content = #{content},
			cheatno = #{cheatno}
		WHERE stateno = #{stateno}
	</update>
	
	<!-- 진술서 삭제하기 -->
	<delete id="delete" parameterType="Integer">
		DELETE FROM cheaterdb WHERE stateno = #{stateno} 
	</delete>
	
	<!-- 차트용 -->
	<!-- 피해사례 수 -->
	<!-- 진술서 등록된 수 불러오기 -->
	<select id="getAllCheaterCount" resultType="Integer">
		SELECT count(*) count
		FROM cheaterdb
	</select>
	
	<!-- 카테고리별 진술서 수 불러오기 -->
	<select id="getCountCategory" resultType="Integer">
		SELECT count(*) count
		FROM cheaterdb
		WHERE cheatno = #{cheatno}
	</select>
	
	<!-- 휴대폰번호 수 -->
	<select id="getCountPhone" resultType="Integer">
		SELECT count(phone)
		FROM cheaterdb
	</select>
	
	<!-- 계좌번호 수 -->
	<select id="getCountAccount" resultType="Integer">
		SELECT count(account)
		FROM cheaterdb
	</select>
	
	<!-- 피해금액 -->
	<select id="getCountSum" resultType="Integer">
		SELECT sum(COALESCE(deposit,0))
		FROM cheaterdb
	</select>
	
	<!-- 피해물품 TOP 10 -->
	<select id="getCountItems" resultType="DTO.CheaterDTO">
		SELECT goodskind, count(*) count
		FROM cheaterdb
		GROUP BY goodskind
		ORDER BY count(*) DESC
	</select>
	
	<!-- 용의자 -->
	<select id="getCountCheaterName" resultType="DTO.CheaterDTO">
		SELECT cheatername, count(*) count
		FROM cheaterdb
		GROUP BY cheatername
		ORDER BY count(*) DESC
	</select>
	
	<!-- 사이트 -->
	<select id="getCountDomain" resultType="DTO.CheaterDTO">
		SELECT domain, count(*) count
		FROM cheaterdb
		GROUP BY domain
		ORDER BY count(*) DESC
	</select>
	
	<!-- 은행 -->
	<select id="getCountBankName" resultType="DTO.CheaterDTO">
		SELECT bankname, count(*) count
		FROM cheaterdb
		GROUP BY bankname
		ORDER BY count(*) DESC
	</select>
	
	<!-- 날짜별 날짜순 진술서 수 불러오기 -->
	<select id="getChart" resultType="DTO.chartDTO">
		SELECT regdate, count(*) count 
		FROM cheaterdb 
		WHERE DATE_FORMAT(regdate,'%Y-%m') 
		BETWEEN '${regdate}'
		AND '${regdate}' 
		GROUP BY regdate
	</select>
</mapper>