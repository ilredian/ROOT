<?xml version="1.0" encoding="UTF-8"?>
<beans
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://www.springframework.org/schema/beans">
	 
	<!-- spring 사전 및 사후 호출 어노테이션 방식을 위해 쓰는 태그_
	spring 
	<security:global-method-security pre-post-annotations="enabled"/>
	 -->
	 
	<security:http auto-config="true" use-expressions="true">
		<security:remember-me/>
		<security:csrf disabled="true"/>
	   
        <security:form-login login-page="/login.go"
	                         authentication-failure-url="/login.go?error"/>
	    <security:logout 	logout-url="/logout.go"
	    					logout-success-url="/" />            
	 
	    <!--//////////////////////권한 설정부분****/////////////////////////  -->      
		<!-- 
		<security:intercept-url pattern="/**" access="ROLE_USER"/>
		<intercept-url pattern="/login" access="permitAll"  />
		 -->
		<security:intercept-url pattern="/login" access="hasRole('IS_AUTHENTICATED_ANONYMOUSLY')"/>
		<security:intercept-url pattern="/**" access="permitAll" />
		<security:intercept-url pattern="/**" access="" />
		
		
		
	<!-- 
		<security:intercept-url pattern="/login.go" access="hasRole('IS_AUTHENTICATED_ANONYMOUSLY')"/>
	 -->	
		<!-- 
		<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
 -->

		<security:intercept-url pattern="/boardFree/**"
								access="hasRole('ROLE_USER')" />
								
		<security:intercept-url pattern="/boardLaw/**"
								access="hasRole('ROLE_USER')" />		
												
		<security:intercept-url pattern="/boardNotice/noticeWrite.go"
								access="hasRole('ROLE_ADMIN')" />	<!-- 관리자만 글쓰기 부여 -->
	
		<security:intercept-url pattern="/boardNotice/**"
								access="hasRole('ROLE_USER')" />								
								
		<security:intercept-url pattern="/boardStatement/**"
								access="hasRole('ROLE_POLICE')" />		
														
	</security:http>
	
	
	<!-- 에러페이지 지정  -->
	
<!-- 	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/ERROR.go" access="permitAll"/>
		<security:access-denied-handler error-page="ERROR/ERROR.go"/>	
	</security:http>
 -->	
	
	
<!-- 	일일이 집어넣으면 요렇게
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="kglim" password="1004"
											authorities="ROLE_USER" />
				<security:user name="admin" password="1004"
											authorities="ROLE_USER,ROLE_ADMIN" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> 
     -->

     <!-- 자동화아아 -->
 <security:authentication-manager>
  <security:authentication-provider>
    <security:jdbc-user-service	
    data-source-ref="driverManagerDataSource"
    users-by-username-query="SELECT email, password, 1 enabled FROM memberdb where email like '%%'"
    authorities-by-username-query="select m.EMAIL , r.typeno, r.ROLE_NAME  
                    from memberdb m join roll r 
                    on m.typeno = r.typeno 
                    where m.EMAIL=?" />
<!-- 
  <security:password-encoder hash="md5" base64="false"/>여기 추가                 
 --> 
  </security:authentication-provider>
 </security:authentication-manager> 
 
</beans>